name: Matrix Mapping Processing

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  process-mappings:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mapping: [
          { "name": "mapping1", "value": "test1" },
          { "name": "mapping2", "value": "test2" },
          { "name": "mapping3", "value": "test3" }
        ]
      # Make sure all matrix jobs run even if one fails
      fail-fast: false
    outputs:
      # Each matrix job will output to a unique key based on the mapping name
      matrix-result-mapping1: ${{ steps.set-output.outputs.result-mapping1 || '' }}
      matrix-result-mapping2: ${{ steps.set-output.outputs.result-mapping2 || '' }}
      matrix-result-mapping3: ${{ steps.set-output.outputs.result-mapping3 || '' }}
    
    steps:
      - name: Process Mapping
        id: process
        run: |
          # Simulate processing of mapping
          processed_value="${{ matrix.mapping.value }}_processed"
          echo "name=${{ matrix.mapping.name }}" >> $GITHUB_OUTPUT
          echo "processed_value=$processed_value" >> $GITHUB_OUTPUT

      - name: Set Output
        id: set-output
        run: |
          # Create a JSON object from the individual outputs
          result=$(jq -n \
            --arg name "${{ steps.process.outputs.name }}" \
            --arg processed "${{ steps.process.outputs.processed_value }}" \
            '{name: $name, processed_value: $processed}')
          
          # Escape the JSON for GitHub Actions output
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          
          # Output to a unique key based on the mapping name
          echo "result-${{ matrix.mapping.name }}=$result" >> $GITHUB_OUTPUT

  merge-results:
    needs: process-mappings
    runs-on: ubuntu-latest
    steps:
      - name: Merge Results
        id: merge
        run: |
          # Create an array of all the matrix results
          results='[
            ${{ needs.process-mappings.outputs.matrix-result-mapping1 }},
            ${{ needs.process-mappings.outputs.matrix-result-mapping2 }},
            ${{ needs.process-mappings.outputs.matrix-result-mapping3 }}
          ]'
          
          # Clean up the array (remove empty items)
          merged_json=$(echo "$results" | jq 'map(select(. != null and . != ""))')
          echo "merged_results=$merged_json" >> $GITHUB_OUTPUT

      - name: Show Merged Results
        run: |
          echo "Merged Results:"
          echo '${{ steps.merge.outputs.merged_results }}' | jq '.'

      