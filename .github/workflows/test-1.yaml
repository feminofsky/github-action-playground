name: Matrix Output Collection

on:
  push:

jobs:
  matrix-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        item: [apple, banana, cherry]

    outputs:
      images: ${{ steps.set-output.outputs.images }}

    steps:
      - name: Set Image Name
        id: image
        run: echo "name=${{ matrix.item }}" >> $GITHUB_OUTPUT

      - name: Generate Output
        id: set-output
        run: |
          IMAGE_INFO=$(jq -c -n --arg key "${{ matrix.item }}" --arg url "${{ matrix.item }}" '{ ($key): $url }')
          echo "$IMAGE_INFO" > output.json  # Save the JSON in a file

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          # Use a unique artifact name based on matrix item
          name: matrix-output-${{ matrix.item }}
          path: output.json



  collect-outputs:
    runs-on: ubuntu-latest
    needs: matrix-job
    steps:
      - name: Create Artifact Download List
        id: download_list
        run: |
          # List of matrix items
          ITEMS=("apple" "banana" "cherry")

          # Create a list of artifact download paths
          echo "Downloading artifacts for ${ITEMS[@]}"
          for item in "${ITEMS[@]}"; do
            echo "matrix-output-$item"
          done > artifacts.txt

      - name: Download All Matrix Artifacts
        run: |
          # Iterate over the artifact names and download them
          while IFS= read -r artifact; do
            echo "Downloading $artifact"
            actions/download-artifact@v3:
              name: "$artifact"
              path: "./artifacts/$artifact"
          done < artifacts.txt

      - name: Merge Matrix Outputs
        id: merge
        run: |
          JSON_OBJ='{}'

          # Loop through all downloaded files and merge them
          for file in ./artifacts/*/output.json; do
            PART=$(cat "$file")
            JSON_OBJ=$(echo $JSON_OBJ | jq --argjson part "$PART" '. + $part')
          done

          # Write the merged JSON to a file
          echo "$JSON_OBJ" > merged.json
          # Set the merged JSON as an output (ensure it's single-line)
          echo "result=$(cat merged.json | jq -c)" >> $GITHUB_OUTPUT

      - name: Show Merged JSON
        run: cat merged.json

      