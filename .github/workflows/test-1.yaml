name: Matrix Mapping Processing

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  process-mappings:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mapping: [
          { "name": "mapping1", "value": "test1" },
          { "name": "mapping2", "value": "test2" },
          { "name": "mapping3", "value": "test3" }
        ]
    outputs:
      matrix-result: ${{ steps.set-matrix-result.outputs.result }}
    
    steps:
      - name: Process Mapping
        id: process
        run: |
          # Simulate processing of mapping
          processed_value="${{ matrix.mapping.value }}_processed"
          echo "name=${{ matrix.mapping.name }}" >> $GITHUB_OUTPUT
          echo "processed_value=$processed_value" >> $GITHUB_OUTPUT

      - name: Set Matrix Result
        id: set-matrix-result
        run: |
          # Create a JSON object from the individual outputs
          result=$(jq -n \
            --arg name "${{ steps.process.outputs.name }}" \
            --arg processed "${{ steps.process.outputs.processed_value }}" \
            '{name: $name, processed_value: $processed}')
          # Escape the JSON for GitHub Actions output
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}"
          echo "result=$result" >> $GITHUB_OUTPUT

  merge-results:
    needs: process-mappings
    runs-on: ubuntu-latest
    steps:
      - name: Merge Results
        id: merge
        run: |
          # Collect all matrix job results and merge them
          results='${{ toJSON(needs.process-mappings.outputs) }}'
          
          # Convert the results into an array and save as JSON
          merged_json=$(echo "$results" | jq -c '[.[]]')
          echo "merged_results=$merged_json" >> $GITHUB_OUTPUT

      - name: Show Merged Results
        run: |
          echo "Merged Results:"
          echo '${{ steps.merge.outputs.merged_results }}' | jq '.'

      